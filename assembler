def binary(decimal, num_bits):
   bin_abs = bin(abs(decimal))[2:]
   padded = bin_abs.zfill(num_bits)
   if decimal<0:
       inverted_bits = ''.join('1' if bit == '0' else '0' for bit in padded)
       inverted_decimal = int(inverted_bits, 2) + 1
       twos_complement = bin(inverted_decimal)[2:].zfill(num_bits)
       return twos_complement
   else:
       return padded

f=open("input.txt","r")
list1=f.readlines()

R_type={"add":["0000000","000"],"sub":["0100000","000"],"sll":["0000000","001"],"slt":["0000000","010"],"sltu":["0000000","011"],"xor":["0000000","100"],"srl":["0000000","101"],"or":["0000000","110"],"and":["0000000","111"]}
B_type={"beq":"000","bne":"001","blt":"100","bge":"101","bltu":"110","bgeu":"111"}
S_type = {"sw":"0100011"}
I_type = {"lw":["010","0000011"],"addi":["000","0010011"],"sltiu":["011","0010011"],"jalr":["000","1100111"]}
U_type = {"lui":"0110111","auipc":"0010111"}
J_type = {"jal":"1101111"}
registers={"zero":"00000","ra":"00001","sp":"00010","gp":"00011","tp":"00100","t0":"00101","t1":"00110","t2":"00111","s0":"01000","fp":"01000","s1":"01001","a0":"01010","a1":"01011"}

x=12
for i in range(2,8):
   y=bin(x)[2:]
   if x<16:
       y="0"+y
   a=str(i)
   b="a"+a
   registers[b]=y
   x=x+1
x=18
for i in range(2,12):
   y=bin(x)[2:]
   a=str(i)
   b="s"+a
   registers[b]=y
   x=x+1
x=28
for i in range(3,7):
   y=bin(x)[2:]
   a=str(i)
   b="t"+a
   registers[b]=y
   x+=1

for i in list1:
   output=""
   list2=i.split()
   if list2[0] in R_type:
       list3=list2[1].split(",")
       output+=R_type[list2[0]][0]+registers[list3[2]]+registers[list3[1]]+R_type[list2[0]][1]+registers[list3[0]]+"0110011"
       print(output)
   elif list2[0] in B_type:
       list3=list2[1].split(",")
       x=int(list3[2])   
       y=binary(x,12)
       output+=y[0:7]+registers[list3[1]]+registers[list3[0]]+B_type[list2[0]]+y[7:12]+"1100011"
       print(output)
   elif list2[0] in J_type:
       list3=list2[1].split(",")
       x=binary(int(list3[1]),20)
       output+=x[8:20]+x[0:7]+registers[list3[0]]+J_type[list2[0]]
       print(output)
  elid list2[0] in I_type:
    list3 = list2[1].split(",")
    x = binary(int(list3[2]),12)
    output += x + registers[list3[1]] + I_type[list2[0]] + registers[list3[0]]
    print(output)
f.close()
